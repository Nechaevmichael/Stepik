# Перед Вами матрица размера 5 × 5, состоящая из 24-x нулей и единственной единицы. Строки матрицы пронумеруем числами 
# от 1 до 5 сверху вниз, столбцы матрицы пронумеруем числами от 1 до 5 слева направо. За один ход разрешается 
# применить к матрице одно из двух следующих преобразований:
# Поменять местами две соседние строки матрицы, то есть строки с номерами i и i + 1 для некоторого целого i (1 ≤ i < 5).
# Поменять местами два соседних столбца матрицы, то есть столбцы с номерами j и j + 1 для некоторого целого j (1 ≤ j < 5).
# Вы считаете, что матрица будет выглядеть красиво, если единственная единица этой матрицы будет находиться в ее центре 
# (в клетке, которая находится на пересечении третьей строки и третьего столбца). Посчитайте, какое минимальное количество 
# ходов потребуется, чтобы сделать матрицу красивой.
# Входные данные
# Входные данные состоят из пяти строк, в каждой из которых записаны пять целых чисел: j-ое число в i-ой строке входных 
# данных обозначает элемент матрицы, стоящий на пересечении i-ой строки и j-ого столбца. Гарантируется, что матрица состоит 
# из 24-x нулей и единственной единицы.
# Выходные данные
# Выведите единственное целое число — минимальное количество действий, которое требуется, чтобы сделать матрицу красивой.
# Sample Input 1:
# 0 0 1 0 0
# 0 0 0 0 0
# 0 0 0 0 0
# 0 0 0 0 0
# 0 0 0 0 0
# Sample Output 1:
# 2
# Sample Input 2:
# 0 0 0 0 0
# 0 0 0 0 0
# 0 0 0 0 0
# 0 0 1 0 0
# 0 0 0 0 0
# Sample Output 2:
# 1

a = []
for i in range(5):
    a.append(list(map(int, input().split())))
string = 0
column = 0
for i in range(5):
    for j in range(5):
        if a[i][j] == 0:
            continue
        else:
            string = i
            column = j
            break

count_string = 0
while string != 2:
    if string > 2:
        string -= 1
        count_string += 1
    else:
        string += 1
        count_string += 1

count_column = 0
while column != 2:
    if column > 2:
        column -= 1
        count_column += 1
    else:
        column += 1
        count_column += 1

print(count_string + count_column) 


# if string == 0:
#     print(2)
# elif string == 1:
#     print(1)
# elif string == 2:
#     print(0)
# elif string == 3:
#     print(1)
# elif string == 4:
#     print(2)